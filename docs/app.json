[{"name": "app.py", "content": "# Example of using plotly via shinywidgets\n#%%\nimport numpy as np\nimport sklearn\n#from sklearn.linear_model import LinearRegression\nfrom shiny import *\nfrom shinywidgets import output_widget, register_widget\nimport plotly.graph_objs as go\n\nprint(sklearn.__version__)\n\n#%%\n# Generate some data and fit a linear regression\nn = 10000\ndat = np.random.RandomState(0).multivariate_normal([0, 0], [(1, 0.5), (0.5, 1)], n).T\nx = dat[0]\ny = dat[1]\nLinearRegression = sklearn.linear_model()\n\nfit = LinearRegression().fit(x.reshape(-1, 1), dat[1])\nxgrid = np.linspace(start=min(x), stop=max(x), num=30)\n\napp_ui = ui.page_fluid(\n    ui.input_checkbox(\"show_fit\", \"Show fitted line\", value=True),\n    output_widget(\"scatterplot\"),\n)\n\n\ndef server(input, output, session):\n\n    scatterplot = go.FigureWidget(\n        data=[\n            go.Scattergl(\n                x=x,\n                y=y,\n                mode=\"markers\",\n                marker=dict(color=\"rgba(0, 0, 0, 0.05)\", size=5),\n            ),\n            go.Scattergl(\n                x=xgrid,\n                y=fit.intercept_ + fit.coef_[0] * xgrid,\n                mode=\"lines\",\n                line=dict(color=\"red\", width=2),\n            ),\n        ],\n        layout={\"showlegend\": False},\n    )\n\n    register_widget(\"scatterplot\", scatterplot)\n\n    @reactive.Effect\n    def _():\n        scatterplot.data[1].visible = input.show_fit()\n\n\napp = App(app_ui, server)\n", "type": "text"}, {"name": "requirements.txt", "content": "plotly\n", "type": "text"}]